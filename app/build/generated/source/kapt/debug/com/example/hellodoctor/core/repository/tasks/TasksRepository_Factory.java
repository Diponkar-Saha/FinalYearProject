// Generated by Dagger (https://dagger.dev).
package com.example.hellodoctor.core.repository.tasks;

import com.google.firebase.database.FirebaseDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TasksRepository_Factory implements Factory<TasksRepository> {
  private final Provider<FirebaseDatabase> firebaseDatabaseProvider;

  public TasksRepository_Factory(Provider<FirebaseDatabase> firebaseDatabaseProvider) {
    this.firebaseDatabaseProvider = firebaseDatabaseProvider;
  }

  @Override
  public TasksRepository get() {
    return newInstance(firebaseDatabaseProvider.get());
  }

  public static TasksRepository_Factory create(
      Provider<FirebaseDatabase> firebaseDatabaseProvider) {
    return new TasksRepository_Factory(firebaseDatabaseProvider);
  }

  public static TasksRepository newInstance(FirebaseDatabase firebaseDatabase) {
    return new TasksRepository(firebaseDatabase);
  }
}
