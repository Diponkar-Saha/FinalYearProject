// Generated by Dagger (https://dagger.dev).
package com.example.hellodoctor.core.repository.chat;

import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.storage.FirebaseStorage;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatRepository_Factory implements Factory<ChatRepository> {
  private final Provider<FirebaseDatabase> firebaseDatabaseProvider;

  private final Provider<FirebaseStorage> firebaseStorageProvider;

  public ChatRepository_Factory(Provider<FirebaseDatabase> firebaseDatabaseProvider,
      Provider<FirebaseStorage> firebaseStorageProvider) {
    this.firebaseDatabaseProvider = firebaseDatabaseProvider;
    this.firebaseStorageProvider = firebaseStorageProvider;
  }

  @Override
  public ChatRepository get() {
    return newInstance(firebaseDatabaseProvider.get(), firebaseStorageProvider.get());
  }

  public static ChatRepository_Factory create(Provider<FirebaseDatabase> firebaseDatabaseProvider,
      Provider<FirebaseStorage> firebaseStorageProvider) {
    return new ChatRepository_Factory(firebaseDatabaseProvider, firebaseStorageProvider);
  }

  public static ChatRepository newInstance(FirebaseDatabase firebaseDatabase,
      FirebaseStorage firebaseStorage) {
    return new ChatRepository(firebaseDatabase, firebaseStorage);
  }
}
