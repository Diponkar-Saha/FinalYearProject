// Generated by Dagger (https://dagger.dev).
package com.example.hellodoctor.ui.login;

import com.example.hellodoctor.repositort.AuthRepository;
import com.example.hellodoctor.repositort.Preferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Login1ViewModel_Factory implements Factory<Login1ViewModel> {
  private final Provider<AuthRepository> repositoryProvider;

  private final Provider<Preferences> sharedPrefProvider;

  public Login1ViewModel_Factory(Provider<AuthRepository> repositoryProvider,
      Provider<Preferences> sharedPrefProvider) {
    this.repositoryProvider = repositoryProvider;
    this.sharedPrefProvider = sharedPrefProvider;
  }

  @Override
  public Login1ViewModel get() {
    return newInstance(repositoryProvider.get(), sharedPrefProvider.get());
  }

  public static Login1ViewModel_Factory create(Provider<AuthRepository> repositoryProvider,
      Provider<Preferences> sharedPrefProvider) {
    return new Login1ViewModel_Factory(repositoryProvider, sharedPrefProvider);
  }

  public static Login1ViewModel newInstance(AuthRepository repository, Preferences sharedPref) {
    return new Login1ViewModel(repository, sharedPref);
  }
}
