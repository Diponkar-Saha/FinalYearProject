// Generated by Dagger (https://dagger.dev).
package com.example.hellodoctor.core;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import kotlinx.coroutines.CoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoroutinesModule_ProvideCoroutineDispatcherFactory implements Factory<CoroutineDispatcher> {
  @Override
  public CoroutineDispatcher get() {
    return provideCoroutineDispatcher();
  }

  public static CoroutinesModule_ProvideCoroutineDispatcherFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CoroutineDispatcher provideCoroutineDispatcher() {
    return Preconditions.checkNotNullFromProvides(CoroutinesModule.INSTANCE.provideCoroutineDispatcher());
  }

  private static final class InstanceHolder {
    private static final CoroutinesModule_ProvideCoroutineDispatcherFactory INSTANCE = new CoroutinesModule_ProvideCoroutineDispatcherFactory();
  }
}
