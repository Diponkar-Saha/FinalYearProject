// Generated by view binder compiler. Do not edit!
package com.example.cohorts.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.example.cohorts.R;
import com.google.android.material.textview.MaterialTextView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TopDoctorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CircleImageView appCompatImageView;

  @NonNull
  public final Button buttonAppointment;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final MaterialTextView textViewName;

  @NonNull
  public final MaterialTextView textViewSpecial;

  @NonNull
  public final MaterialTextView textViewTime;

  @NonNull
  public final MaterialTextView textViewVisit;

  private TopDoctorBinding(@NonNull ConstraintLayout rootView,
      @NonNull CircleImageView appCompatImageView, @NonNull Button buttonAppointment,
      @NonNull Guideline guideline2, @NonNull MaterialTextView textViewName,
      @NonNull MaterialTextView textViewSpecial, @NonNull MaterialTextView textViewTime,
      @NonNull MaterialTextView textViewVisit) {
    this.rootView = rootView;
    this.appCompatImageView = appCompatImageView;
    this.buttonAppointment = buttonAppointment;
    this.guideline2 = guideline2;
    this.textViewName = textViewName;
    this.textViewSpecial = textViewSpecial;
    this.textViewTime = textViewTime;
    this.textViewVisit = textViewVisit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TopDoctorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TopDoctorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.top_doctor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TopDoctorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appCompatImageView;
      CircleImageView appCompatImageView = rootView.findViewById(id);
      if (appCompatImageView == null) {
        break missingId;
      }

      id = R.id.buttonAppointment;
      Button buttonAppointment = rootView.findViewById(id);
      if (buttonAppointment == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = rootView.findViewById(id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.textView_name;
      MaterialTextView textViewName = rootView.findViewById(id);
      if (textViewName == null) {
        break missingId;
      }

      id = R.id.textView_special;
      MaterialTextView textViewSpecial = rootView.findViewById(id);
      if (textViewSpecial == null) {
        break missingId;
      }

      id = R.id.textView_time;
      MaterialTextView textViewTime = rootView.findViewById(id);
      if (textViewTime == null) {
        break missingId;
      }

      id = R.id.textView_visit;
      MaterialTextView textViewVisit = rootView.findViewById(id);
      if (textViewVisit == null) {
        break missingId;
      }

      return new TopDoctorBinding((ConstraintLayout) rootView, appCompatImageView,
          buttonAppointment, guideline2, textViewName, textViewSpecial, textViewTime,
          textViewVisit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
