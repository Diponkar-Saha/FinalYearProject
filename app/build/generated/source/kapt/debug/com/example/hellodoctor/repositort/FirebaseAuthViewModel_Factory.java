// Generated by Dagger (https://dagger.dev).
package com.example.hellodoctor.repositort;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirebaseAuthViewModel_Factory implements Factory<FirebaseAuthViewModel> {
  private final Provider<FirebaseAuthRepository> repositoryProvider;

  public FirebaseAuthViewModel_Factory(Provider<FirebaseAuthRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public FirebaseAuthViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static FirebaseAuthViewModel_Factory create(
      Provider<FirebaseAuthRepository> repositoryProvider) {
    return new FirebaseAuthViewModel_Factory(repositoryProvider);
  }

  public static FirebaseAuthViewModel newInstance(FirebaseAuthRepository repository) {
    return new FirebaseAuthViewModel(repository);
  }
}
