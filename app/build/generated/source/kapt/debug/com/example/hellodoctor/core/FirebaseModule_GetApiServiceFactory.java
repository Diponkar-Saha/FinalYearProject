// Generated by Dagger (https://dagger.dev).
package com.example.hellodoctor.core;

import dagger.hilt.android.qualifiers.ApplicationContext;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirebaseModule_GetApiServiceFactory implements Factory<ApplicationContext> {
  private final Provider<ApplicationContext> contextProvider;

  public FirebaseModule_GetApiServiceFactory(Provider<ApplicationContext> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public ApplicationContext get() {
    return getApiService(contextProvider.get());
  }

  public static FirebaseModule_GetApiServiceFactory create(
      Provider<ApplicationContext> contextProvider) {
    return new FirebaseModule_GetApiServiceFactory(contextProvider);
  }

  public static ApplicationContext getApiService(ApplicationContext context) {
    return Preconditions.checkNotNullFromProvides(FirebaseModule.INSTANCE.getApiService(context));
  }
}
