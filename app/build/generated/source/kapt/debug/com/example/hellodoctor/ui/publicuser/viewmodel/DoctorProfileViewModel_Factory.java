// Generated by Dagger (https://dagger.dev).
package com.example.hellodoctor.ui.publicuser.viewmodel;

import com.example.hellodoctor.repositort.SpecialRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DoctorProfileViewModel_Factory implements Factory<DoctorProfileViewModel> {
  private final Provider<SpecialRepository> repositoryProvider;

  public DoctorProfileViewModel_Factory(Provider<SpecialRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public DoctorProfileViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static DoctorProfileViewModel_Factory create(
      Provider<SpecialRepository> repositoryProvider) {
    return new DoctorProfileViewModel_Factory(repositoryProvider);
  }

  public static DoctorProfileViewModel newInstance(SpecialRepository repository) {
    return new DoctorProfileViewModel(repository);
  }
}
