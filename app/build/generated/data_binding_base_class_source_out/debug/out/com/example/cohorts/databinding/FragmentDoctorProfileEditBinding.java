// Generated by view binder compiler. Do not edit!
package com.example.cohorts.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import com.example.cohorts.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDoctorProfileEditBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final AppCompatTextView aboutDoctor;

  @NonNull
  public final AppCompatEditText aboutDoctorDescription;

  @NonNull
  public final AppCompatTextView appCompatTextViewName;

  @NonNull
  public final AppCompatTextView appCompatTextViewTitle;

  @NonNull
  public final AppCompatButton buttonAppointment1;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final ConstraintLayout constraintLayout4;

  @NonNull
  public final ConstraintLayout constraintLayout5;

  @NonNull
  public final AppCompatEditText editExperience;

  @NonNull
  public final AppCompatEditText editRatting;

  @NonNull
  public final AppCompatEditText editSurgery;

  @NonNull
  public final AppCompatEditText editpatient;

  @NonNull
  public final AppCompatEditText edittextlocation;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final Guideline guideline4;

  @NonNull
  public final Guideline guideline6;

  @NonNull
  public final CircleImageView profileImage;

  private FragmentDoctorProfileEditBinding(@NonNull NestedScrollView rootView,
      @NonNull AppCompatTextView aboutDoctor, @NonNull AppCompatEditText aboutDoctorDescription,
      @NonNull AppCompatTextView appCompatTextViewName,
      @NonNull AppCompatTextView appCompatTextViewTitle,
      @NonNull AppCompatButton buttonAppointment1, @NonNull ConstraintLayout constraintLayout,
      @NonNull ConstraintLayout constraintLayout2, @NonNull ConstraintLayout constraintLayout3,
      @NonNull ConstraintLayout constraintLayout4, @NonNull ConstraintLayout constraintLayout5,
      @NonNull AppCompatEditText editExperience, @NonNull AppCompatEditText editRatting,
      @NonNull AppCompatEditText editSurgery, @NonNull AppCompatEditText editpatient,
      @NonNull AppCompatEditText edittextlocation, @NonNull Guideline guideline3,
      @NonNull Guideline guideline4, @NonNull Guideline guideline6,
      @NonNull CircleImageView profileImage) {
    this.rootView = rootView;
    this.aboutDoctor = aboutDoctor;
    this.aboutDoctorDescription = aboutDoctorDescription;
    this.appCompatTextViewName = appCompatTextViewName;
    this.appCompatTextViewTitle = appCompatTextViewTitle;
    this.buttonAppointment1 = buttonAppointment1;
    this.constraintLayout = constraintLayout;
    this.constraintLayout2 = constraintLayout2;
    this.constraintLayout3 = constraintLayout3;
    this.constraintLayout4 = constraintLayout4;
    this.constraintLayout5 = constraintLayout5;
    this.editExperience = editExperience;
    this.editRatting = editRatting;
    this.editSurgery = editSurgery;
    this.editpatient = editpatient;
    this.edittextlocation = edittextlocation;
    this.guideline3 = guideline3;
    this.guideline4 = guideline4;
    this.guideline6 = guideline6;
    this.profileImage = profileImage;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDoctorProfileEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDoctorProfileEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_doctor_profile_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDoctorProfileEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aboutDoctor;
      AppCompatTextView aboutDoctor = rootView.findViewById(id);
      if (aboutDoctor == null) {
        break missingId;
      }

      id = R.id.aboutDoctorDescription;
      AppCompatEditText aboutDoctorDescription = rootView.findViewById(id);
      if (aboutDoctorDescription == null) {
        break missingId;
      }

      id = R.id.appCompatTextViewName;
      AppCompatTextView appCompatTextViewName = rootView.findViewById(id);
      if (appCompatTextViewName == null) {
        break missingId;
      }

      id = R.id.appCompatTextViewTitle;
      AppCompatTextView appCompatTextViewTitle = rootView.findViewById(id);
      if (appCompatTextViewTitle == null) {
        break missingId;
      }

      id = R.id.buttonAppointment1;
      AppCompatButton buttonAppointment1 = rootView.findViewById(id);
      if (buttonAppointment1 == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = rootView.findViewById(id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = rootView.findViewById(id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = rootView.findViewById(id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.constraintLayout4;
      ConstraintLayout constraintLayout4 = rootView.findViewById(id);
      if (constraintLayout4 == null) {
        break missingId;
      }

      id = R.id.constraintLayout5;
      ConstraintLayout constraintLayout5 = rootView.findViewById(id);
      if (constraintLayout5 == null) {
        break missingId;
      }

      id = R.id.editExperience;
      AppCompatEditText editExperience = rootView.findViewById(id);
      if (editExperience == null) {
        break missingId;
      }

      id = R.id.editRatting;
      AppCompatEditText editRatting = rootView.findViewById(id);
      if (editRatting == null) {
        break missingId;
      }

      id = R.id.editSurgery;
      AppCompatEditText editSurgery = rootView.findViewById(id);
      if (editSurgery == null) {
        break missingId;
      }

      id = R.id.editpatient;
      AppCompatEditText editpatient = rootView.findViewById(id);
      if (editpatient == null) {
        break missingId;
      }

      id = R.id.edittextlocation;
      AppCompatEditText edittextlocation = rootView.findViewById(id);
      if (edittextlocation == null) {
        break missingId;
      }

      id = R.id.guideline3;
      Guideline guideline3 = rootView.findViewById(id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.guideline4;
      Guideline guideline4 = rootView.findViewById(id);
      if (guideline4 == null) {
        break missingId;
      }

      id = R.id.guideline6;
      Guideline guideline6 = rootView.findViewById(id);
      if (guideline6 == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = rootView.findViewById(id);
      if (profileImage == null) {
        break missingId;
      }

      return new FragmentDoctorProfileEditBinding((NestedScrollView) rootView, aboutDoctor,
          aboutDoctorDescription, appCompatTextViewName, appCompatTextViewTitle, buttonAppointment1,
          constraintLayout, constraintLayout2, constraintLayout3, constraintLayout4,
          constraintLayout5, editExperience, editRatting, editSurgery, editpatient,
          edittextlocation, guideline3, guideline4, guideline6, profileImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
