// Generated by data binding compiler. Do not edit!
package com.example.cohorts.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.example.cohorts.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentTasksBinding extends ViewDataBinding {
  @NonNull
  public final FloatingActionButton addTaskFab;

  @NonNull
  public final TextView filteringText;

  @NonNull
  public final ImageView noTasksIcon;

  @NonNull
  public final LinearLayout noTasksLayout;

  @NonNull
  public final TextView noTasksText;

  @NonNull
  public final ConstraintLayout tasksContainerLayout;

  @NonNull
  public final CoordinatorLayout tasksFragmentRootLayout;

  @NonNull
  public final LinearLayout tasksLinearLayout;

  @NonNull
  public final RecyclerView tasksRcv;

  protected FragmentTasksBinding(Object _bindingComponent, View _root, int _localFieldCount,
      FloatingActionButton addTaskFab, TextView filteringText, ImageView noTasksIcon,
      LinearLayout noTasksLayout, TextView noTasksText, ConstraintLayout tasksContainerLayout,
      CoordinatorLayout tasksFragmentRootLayout, LinearLayout tasksLinearLayout,
      RecyclerView tasksRcv) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addTaskFab = addTaskFab;
    this.filteringText = filteringText;
    this.noTasksIcon = noTasksIcon;
    this.noTasksLayout = noTasksLayout;
    this.noTasksText = noTasksText;
    this.tasksContainerLayout = tasksContainerLayout;
    this.tasksFragmentRootLayout = tasksFragmentRootLayout;
    this.tasksLinearLayout = tasksLinearLayout;
    this.tasksRcv = tasksRcv;
  }

  @NonNull
  public static FragmentTasksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_tasks, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentTasksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentTasksBinding>inflateInternal(inflater, R.layout.fragment_tasks, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentTasksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_tasks, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentTasksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentTasksBinding>inflateInternal(inflater, R.layout.fragment_tasks, null, false, component);
  }

  public static FragmentTasksBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentTasksBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentTasksBinding)bind(component, view, R.layout.fragment_tasks);
  }
}
